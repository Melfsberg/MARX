import machine
import time
import rp2

last=0
f=0
start=0
charge=False


trig_out = machine.Pin(4,machine.Pin.OUT)
start_button = machine.Pin(5,machine.Pin.IN, machine.Pin.PULL_DOWN)
chdvolt_in = machine.Pin(14, machine.Pin.IN, machine.Pin.PULL_UP)


@rp2.asm_pio(set_init=(rp2.PIO.OUT_LOW, rp2.PIO.OUT_LOW))
def pwmpio():
    wrap_target()
    set(pins,0b01)    [10]
    nop()             [10]
    nop()             [10]    
    set(pins,0b00)    [10]
    nop()             [10]
    nop()             [10]
    set(pins,0b11)    [10] 
    nop()             [10]
    nop()             [10]    
    set(pins,0b10)    [10]
    nop()             [10]
    nop()             [10]
    wrap()
  
def in1_irqhandler(pin):
     global last, f

     chdvolt_in.irq(handler=None)
     trig_time=time.ticks_us()    
     f=(1000000/time.ticks_diff(trig_time,last))
     last=trig_time
     chdvolt_in.irq(trigger= machine.Pin.IRQ_FALLING, handler=in1_irqhandler)

     
chdvolt_in.irq(trigger= machine.Pin.IRQ_FALLING, handler=in1_irqhandler)            
sm=rp2.StateMachine(0,pwmpio,freq=4000000,set_base=machine.Pin(0))

trig_out.value(0)

while True:

    if start_button.value():
        time.sleep(.2)    
        charge=True   
        tm_start=time.ticks_ms()
        sm.active(1)
        
    if charge:
        if f>800:
            sm.active(0)
            sm.exec("set(pins,0b00)")
            print(f)
            charge=False
            time.sleep_us(50)
            trig_out.value(1)
            time.sleep(0.05)
            trig_out.value(0)
            
        elif time.ticks_diff(time.ticks_ms(),tm_start)>1000:
            sm.active(0)
            sm.exec("set(pins,0b00)")
            print("timed out")
            charge=False
            time.sleep_us(50)
            trig_out.value(1)
            time.sleep(0.05)
            trig_out.value(0)

        
        
